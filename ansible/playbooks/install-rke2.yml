---
- name: Create RKE2 config directory
  file:
    path: "{{ rke2_config_dir }}"
    state: directory
    mode: '0755'

- name: Install RKE2 on master node
  block:
    - name: Check RKE2 repository URLs
      uri:
        url: "{{ item }}"
        method: GET
        status_code: [200, 301, 302]
      register: repo_check
      ignore_errors: yes
      with_items:
        - "https://rpm.rancher.io/rke2/stable/1.27/centos/7/x86_64/repodata/repomd.xml"
        - "https://rpm.rancher.io/rke2/stable/1.27/rhel/7/x86_64/repodata/repomd.xml"
        - "https://rpm.rancher.io/rke2/latest/centos/7/x86_64/repodata/repomd.xml"
      when: inventory_hostname == groups['masters'][0]

    - name: Set RKE2 installation method based on repository availability
      set_fact:
        use_rpm_install: "{{ repo_check.results | selectattr('status', 'defined') | selectattr('status', 'equalto', 200) | list | length > 0 }}"
      when: inventory_hostname == groups['masters'][0]

    - name: Create RKE2 installation directory
      file:
        path: /root/rke2-install
        state: directory
        mode: '0755'
      when: inventory_hostname == groups['masters'][0]

    - name: Download RKE2 install script
      get_url:
        url: https://get.rke2.io
        dest: /root/rke2-install/install.sh
        mode: '0700'
      when: inventory_hostname == groups['masters'][0]

    - name: Install RKE2 using RPM method
      shell: |
        export INSTALL_RKE2_VERSION="{{ rke2_version }}"
        export INSTALL_RKE2_TYPE="server"
        export INSTALL_RKE2_METHOD="rpm"
        sh /root/rke2-install/install.sh
      args:
        executable: /bin/bash
      when: 
        - inventory_hostname == groups['masters'][0]
        - use_rpm_install | bool

    - name: Install RKE2 using tar method
      shell: |
        export INSTALL_RKE2_VERSION="{{ rke2_version }}"
        export INSTALL_RKE2_TYPE="server"
        export INSTALL_RKE2_METHOD="tar"
        sh /root/rke2-install/install.sh
      args:
        executable: /bin/bash
      when: 
        - inventory_hostname == groups['masters'][0]
        - not use_rpm_install | bool

    - name: Start RKE2 server service
      systemd:
        name: rke2-server
        state: started
        enabled: yes
      when: inventory_hostname == groups['masters'][0]

    - name: Wait for token file to be created on first master
      wait_for:
        path: "{{ rke2_token_file }}"
        timeout: 600
      when: inventory_hostname == groups['masters'][0]

- name: Get node token from first master
  slurp:
    src: "{{ rke2_token_file }}"
  register: node_token
  delegate_to: "{{ groups['masters'][0] }}"
  when: 
    - rke2_type == "agent" or inventory_hostname != groups['masters'][0]
    - groups['masters'] | length > 0
  until: node_token.content is defined
  retries: 30
  delay: 10

- name: Create RKE2 config file for masters
  template:
    src: "../roles/rke2-master/templates/rke2-server-config.yaml.j2"
    dest: "{{ rke2_config_dir }}/config.yaml"
    mode: '0640'
  when: rke2_type == "server"

- name: Create RKE2 config file for workers
  template:
    src: "../roles/rke2-worker/templates/rke2-agent-config.yaml.j2"
    dest: "{{ rke2_config_dir }}/config.yaml"
    mode: '0640'
  when: rke2_type == "agent"

- name: Download RKE2 installation script
  get_url:
    url: "{{ rke2_download_url }}"
    dest: /tmp/rke2-install.sh
    mode: '0755'

- name: Install RKE2 server
  shell: |
    INSTALL_RKE2_VERSION="{{ rke2_version }}" \
    INSTALL_RKE2_CHANNEL="{{ rke2_channel }}" \
    /tmp/rke2-install.sh
  when: rke2_type == "server"

- name: Install RKE2 agent
  shell: |
    INSTALL_RKE2_VERSION="{{ rke2_version }}" \
    INSTALL_RKE2_CHANNEL="{{ rke2_channel }}" \
    INSTALL_RKE2_TYPE="agent" \
    /tmp/rke2-install.sh
  when: rke2_type == "agent"

- name: Enable and start RKE2 server service
  systemd:
    name: rke2-server
    enabled: yes
    state: started
    daemon_reload: yes
  when: rke2_type == "server"

- name: Enable and start RKE2 agent service
  systemd:
    name: rke2-agent
    enabled: yes
    state: started
    daemon_reload: yes
  when: rke2_type == "agent"

- name: Wait for RKE2 server to be ready
  wait_for:
    path: /etc/rancher/rke2/rke2.yaml
    timeout: 300
  when: rke2_type == "server"

- name: Wait for RKE2 to start
  pause:
    seconds: 30